@inherits GenericDialog<TModel>

@typeparam TModel where TModel : class, IOrigin, IInnerProxy
@typeparam TValidator where TValidator : class, IValidator<IViewData<TModel>>

@implements IDialogContentComponent<IViewData<TModel>>

<CascadingValue Value="@Content">
    <CascadingValue Value="@Form">
        <GenericFormWizardHeader TModel="TModel" />
        <FluentDialogBody>
            <GenericFormSet TValidator="TValidator" TModel="TModel" Content="@Content">
                <FluentWizard Id="@(ViewId + "-wizard")"  DisplayStepNumber="WizardStepStatus.None" StepperSize="@StepperSize" Class="generic-wizard" @bind-Value="@ActiveId" StepTitleHiddenWhen="@GridItemHidden.XsAndDown" Height="@Height" Width="@Width" StepperPosition="Position">
                    <Steps>
                        @foreach (var _rubric in _extendedRubrics)
                        {
                            @if (ContainsStepData(_rubric))
                            {
                                <GenericFormWizardStep Rubric="_rubric" Data="@(GetStepData(_rubric))" IconCurrent="@IconCurrent" IconPrevious="@IconPrevious" IconNext="@IconNext" StepStyle="@StepStyle" />
                            }
                        }
                    </Steps>
                    <ButtonTemplate>
                        <FluentDialogFooter Style="padding:0px">
                            <GenericFormWizardButtons TModel="TModel" GoToFirstEnabled="@GoToFirstEnabled" GoToLastEnabled="@GoToLastEnabled" />
                        </FluentDialogFooter>
                    </ButtonTemplate>
                </FluentWizard>
            </GenericFormSet>
        </FluentDialogBody>
    </CascadingValue>
</CascadingValue>


